// Code generated by MockGen. DO NOT EDIT.
// Source: get_ranking.go

// Package mock_get_ranking is a generated GoMock package.
package mock_get_ranking

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockGetRankingUseCase is a mock of GetRankingUseCase interface.
type MockGetRankingUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockGetRankingUseCaseMockRecorder
}

// MockGetRankingUseCaseMockRecorder is the mock recorder for MockGetRankingUseCase.
type MockGetRankingUseCaseMockRecorder struct {
	mock *MockGetRankingUseCase
}

// NewMockGetRankingUseCase creates a new mock instance.
func NewMockGetRankingUseCase(ctrl *gomock.Controller) *MockGetRankingUseCase {
	mock := &MockGetRankingUseCase{ctrl: ctrl}
	mock.recorder = &MockGetRankingUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetRankingUseCase) EXPECT() *MockGetRankingUseCaseMockRecorder {
	return m.recorder
}

// GetRanking mocks base method.
func (m *MockGetRankingUseCase) GetRanking(respondent, quizId string) (float64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRanking", respondent, quizId)
	ret0, _ := ret[0].(float64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRanking indicates an expected call of GetRanking.
func (mr *MockGetRankingUseCaseMockRecorder) GetRanking(respondent, quizId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRanking", reflect.TypeOf((*MockGetRankingUseCase)(nil).GetRanking), respondent, quizId)
}
