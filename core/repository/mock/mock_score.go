// Code generated by MockGen. DO NOT EDIT.
// Source: score.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockScoreRepository is a mock of ScoreRepository interface.
type MockScoreRepository struct {
	ctrl     *gomock.Controller
	recorder *MockScoreRepositoryMockRecorder
}

// MockScoreRepositoryMockRecorder is the mock recorder for MockScoreRepository.
type MockScoreRepositoryMockRecorder struct {
	mock *MockScoreRepository
}

// NewMockScoreRepository creates a new mock instance.
func NewMockScoreRepository(ctrl *gomock.Controller) *MockScoreRepository {
	mock := &MockScoreRepository{ctrl: ctrl}
	mock.recorder = &MockScoreRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockScoreRepository) EXPECT() *MockScoreRepositoryMockRecorder {
	return m.recorder
}

// GetOthersScore mocks base method.
func (m *MockScoreRepository) GetOthersScore(respondent, quizId string) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOthersScore", respondent, quizId)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOthersScore indicates an expected call of GetOthersScore.
func (mr *MockScoreRepositoryMockRecorder) GetOthersScore(respondent, quizId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOthersScore", reflect.TypeOf((*MockScoreRepository)(nil).GetOthersScore), respondent, quizId)
}

// GetScore mocks base method.
func (m *MockScoreRepository) GetScore(respondent, quizId string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetScore", respondent, quizId)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetScore indicates an expected call of GetScore.
func (mr *MockScoreRepositoryMockRecorder) GetScore(respondent, quizId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetScore", reflect.TypeOf((*MockScoreRepository)(nil).GetScore), respondent, quizId)
}

// SaveScore mocks base method.
func (m *MockScoreRepository) SaveScore(respondent string, score int, quizId string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveScore", respondent, score, quizId)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveScore indicates an expected call of SaveScore.
func (mr *MockScoreRepositoryMockRecorder) SaveScore(respondent, score, quizId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveScore", reflect.TypeOf((*MockScoreRepository)(nil).SaveScore), respondent, score, quizId)
}
